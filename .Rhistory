a
class(a)
a <- set_units(10, degree)
a
set_units(a, km)
set_units(a, km^2)
set_units(a^2, km^2)
a
attr(a)
attr(a, 1)
rm(list=ls())
ls()
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
Sys.setenv(TZ="GTM")
Sys.setenv(TZ="GMT")
library(blockCV)
library(blockCV)
?envBlock
Sys.setenv(TZ="GMT")
Sys.setenv(TZ="GTM")
library(blockCV)
raster::minValue()
?sd
?std
library(blockCV)
?envBlock
library(blockCV)
?envBlock
library(blockCV)
?envBlock
library(blockCV)
?envBlock
library(blockCV)
?envBlock
install.packages("testthat")
devtools::use_testthat()
devtools::test()
?Sys.setenv
library(blockCV)
devtools::test()
library(blockCV)
?Sys.setenv
Sys.getenv()
devtools::test()
library(blockCV)
?spatialAutoRange
library(testthat)
library(blockCV)
library(blockCV)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(blockCV)
install.packages("ggplot2", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(blockCV)
library(blockCV)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
system.file("extdata", "awt.tif", package = "blockCV")
exist(system.file("extdata", "awt.tif", package = "blockCV"))
exists(system.file("extdata", "awt.tif", package = "blockCV"))
file.exists(system.file("extdata", "awt.tif", package = "blockCV"))
file.exists(system.file("extdata", "awt2.tif", package = "blockCV"))
?blockCV::buffering
library(blockCV)
?buffering
devtools::test()
devtools::test()
library(blockCV)
devtools::test()
PB <- read.csv(system.file("extdata", "PB.csv", package = "blockCV"))
dim(PB)
devtools::test()
devtools::test()
?spatilBlock
?blockCV::spatilBlock
library(blockCV)
?spatilBlock
?blockCV
sp::SpatialPointsDataFrame()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(blockCV)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(blockCV)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(blockCV)
library(blockCV)
devtools::test()
library(blockCV)
library(rasterVis)
library(raster)
library(blockCV)
library(blockCV)
library(progress)
library(blockCV)
devtools::check()
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
citation("blockCV")
library(blockCV)
library(blockCV)
library(blockCV)
library(foreach)
library(blockCV)
library(blockCV)
library(blockCV)
?spatialAutoRange
devtools::check()
library(blockCV)
devtools::use_travis()
devtools::use_travis()
devtools::use_coverage()
covr::codecov()
devtools::install_github("r-lib/covr")
install.packages("covr")
install.packages("covr")
covr::codecov()
report()
covr::report()
library(blockCV)
library(covr)
cov <- covr::package_coverage()
cov
covr::codecov(token= "668a6472-722f-434d-9e77-0187bcb61a88")
devtools::test()
cov <- covr::package_coverage()
cov
shine(cov)
cov <- covr::package_coverage()
cov
shine(cov)
covr::codecov(token= "668a6472-722f-434d-9e77-0187bcb61a88")
library(blockCV)
library(covr)
?package_coverage
cov <- covr::package_coverage(exclusions = "R/explorer.R")
cov <- covr::package_coverage(function_exclusions = c("rangeExplorer", "foldExplorer"))
cov
covr::codecov(token= "668a6472-722f-434d-9e77-0187bcb61a88", function_exclusions = c("rangeExplorer", "foldExplorer"))
sessionInfo()
sessionInfo()
library(blockCV)
sessionInfo()
devtools::test()
valid_udunits()
library(blockCV)
valid_udunits()
devtools::test()
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
?blockCV
library(blockCV)
library(blockCV)
library(blockCV)
?`blockCV-package`
library(blockCV)
?`blockCV-package`
?blockCV
dfdwsf
?`blockCV-package`
??`blockCV-package`
install.packages("ggplot")
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
browseVignettes("blockCV")
library(blockCV)
library(blockCV)
library(blockCV)
?registerDoSEQ
??registerDoSEQ
??registerDoSNOW
??registerDoSNOW
foreach::registerDoSEQ()
install.packages("roxygen2")
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
load(.travis.yml)
open(.travis.yml)
memory.limit()
rcmdcheck::rcmdcheck("/Users/rvalavi/Dropbox/My PhD thesis/My package/blockCV")
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
?dismo::gridSample
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
?spatialBlock
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
?spatialBlock
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
?blockCV::spatialAutoRange
citation("blockCV")
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
install.packages("plotROC")
# loading raster library
library(raster)
library(sf)
# import raster data
awt <- raster::brick(system.file("extdata", "awt.grd", package = "blockCV"))
# import presence-absence species data
PA <- read.csv(system.file("extdata", "PA.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pa_data <- st_as_sf(PA, coords = c("x", "y"), crs = crs(awt))
# see the first few rows
pa_data
# plot species data on the map
plot(awt[[1]]) # plot raster data
points(pa_data[which(pa_data$Species==1), ], col="red") # add presence points
# import presence-absence species data
PA <- read.csv(system.file("extdata", "PA.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pa_data <- st_as_sf(PA, coords = c("x", "y"), crs = crs(awt))
# see the first few rows
pa_data
# plot species data on the map
plot(awt[[1]]) # plot raster data
plot(pa_data[which(pa_data$Species==1), ], col="red", add=TRUE) # add presence points
plot(pa_data[which(pa_data$Species==0), ], col="blue", add=TRUE) # add absence points
legend(x=500000, y=8250000, legend=c("Presence","Absence"), col=c(2, 4), pch=c(1,1), bty="n")
# import presence-absence species data
PA <- read.csv(system.file("extdata", "PA.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pa_data <- st_as_sf(PA, coords = c("x", "y"), crs = crs(awt))
# see the first few rows
pa_data
# plot species data on the map
plot(awt[[1]]) # plot raster data
plot(pa_data[which(pa_data$Species==1), ], pch = 16, col="red", add=TRUE) # add presence points
plot(pa_data[which(pa_data$Species==0), ], pch = 16, col="blue", add=TRUE) # add absence points
legend(x=500000, y=8250000, legend=c("Presence","Absence"), col=c(2, 4), pch=c(1,1), bty="n")
# import presence-absence species data
PA <- read.csv(system.file("extdata", "PA.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pa_data <- st_as_sf(PA, coords = c("x", "y"), crs = crs(awt))
# see the first few rows
pa_data
# plot species data on the map
plot(awt[[1]]) # plot raster data
plot(pa_data[which(pa_data$Species==1), ], pch = 16, col="red", add=TRUE) # add presence points
plot(pa_data[which(pa_data$Species==0), ], pch = 16, col="blue", add=TRUE) # add absence points
legend(x=500000, y=8250000, legend=c("Presence","Absence"), col=c(2, 4), pch=c(1,1), bty="n", pch = 16)
# import presence-absence species data
PA <- read.csv(system.file("extdata", "PA.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pa_data <- st_as_sf(PA, coords = c("x", "y"), crs = crs(awt))
# see the first few rows
pa_data
# plot species data on the map
plot(awt[[1]]) # plot raster data
plot(pa_data[which(pa_data$Species==1), ], pch = 16, col="red", add=TRUE) # add presence points
plot(pa_data[which(pa_data$Species==0), ], pch = 16, col="blue", add=TRUE) # add absence points
legend(x=500000, y=8250000, legend=c("Presence","Absence"), col=c(2, 4), pch=c(16,16), bty="n")
# import presence-background species data
PB <- read.csv(system.file("extdata", "PB.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pb_data <- st_as_sf(PB, coords = c("x", "y"), crs = crs(awt))
# number of presence and background records
table(pb_data$Species)
# import presence-background species data
PB <- read.csv(system.file("extdata", "PB.csv", package = "blockCV"))
# make a SpatialPointsDataFrame object from data.frame
pb_data <- st_as_sf(PB, coords = c("x", "y"), crs = crs(awt))
# number of presence and background records
table(pb_data$Species)
ggplot2::element_text
vector(mode = "numeric")
library(blockCV)
library(blockCV)
library(blockCV)
rm(c(awt, PA, pa_data, BA, pb_data))
rm(awt, PA, pa_data, BA, pb_data)
rm(PB)
library(blockCV)
trainTestTable
library(blockCV)
library(blockCV)
library(blockCV)
stop("'k' is bigger than the number of spatial blocks\n",
"There is only", nrowBlocks, "blocks")
library(blockCV)
cat("The input layer has no CRS defined. Based on the extent of the input map
it is assumed to have an un-projected reference system\n")
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
library(blockCV)
browseVignettes("blockCV")
cov <- covr::package_coverage(exclusions = "R/explorer.R")
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
library(blockCV)
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
cov
cov
library(covr)
cov
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
library(covr)
cov
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
cov
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
cov
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
cov
# uncovered lines.
zero_coverage(cov)
vignette("how_it_works", package = "covr")
report(cov)
plot(cov)
cov$`blocking.R:318:11:318:43:11:43:349:349`
cov
report(cov)
isntall.packages("DT")
install.packages("DT")
# visualise the coverage
report(cov)
library(blockCV)
library(blockCV)
rm(tmp)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
# print the coverage
cov
# visualise the code coverage
report(cov)
library(blockCV)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
# print the coverage
cov
# visualise the code coverage
report(cov)
library(blockCV)
library(blockCV)
library(blockCV)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
covr::codecov(token= "668a6472-722f-434d-9e77-0187bcb61a88", function_exclusions = c("rangeExplorer", "foldExplorer"))
library(covr)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
library(raster)
li <- list.files("inst/extdata/", pattern = ".grd$", full.names = TRUE)
li
myr <- stack(li)
myr
rm(li, myr)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
awt[[1]] <- raster::reclassify(awt[[1]], c(-Inf, 20, 1, 20, Inf, 2))
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
library(blockCV)
library(blockCV)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
CRS("+init=epsg:4326")
library(blockCV)
tmp <- Sys.time()
cov <- covr::package_coverage(function_exclusions = c("foldExplorer", "rangeExplorer"))
Sys.time() - tmp
rm(tmp)
# print the coverage
cov
# visualise the code coverage
report(cov)
